<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwConfigExceptions="true"
      internalLogLevel="info"
      internalLogFile="c:\temp\internal-nlog-AspNetCore3.txt">

	<!-- enable asp.net core layout renderers -->
	<!--<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>-->

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<target xsi:type="File" name="allfile" fileName="logs/${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

		<target xsi:type="File" name="allInfo" fileName="logs/info/${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

		<target xsi:type="File" name="allError" fileName="logs/error/${shortdate}.log"
						layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

		<target xsi:type="File" name="allWarn" fileName="logs/warn/${shortdate}.log"
						layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<!--<target xsi:type="File" name="ownFile-web" fileName="logs/my/nlog-my-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|" />-->

		<!--流程跟踪日志-->
		<!--<target xsi:type="File" name="ownFile-flow" fileName="logs/flow/${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${message} ${exception:format=tostring}" />
		--><!--workitem交互日志--><!--
		<target xsi:type="File" name="ownFile-workitem" fileName="logs/workitem/${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${message} ${exception:format=tostring}" />-->
		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${level:truncate=4:lowercase=true}: ${logger}[0]${newline}      ${message}${exception:format=tostring}" />
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Debug" maxlevel="Debug" writeTo="allfile" />
		<logger name="*" minlevel="Error" maxlevel="Error" writeTo="allError" />
		<logger name="*" minlevel="Info" maxlevel="Info" writeTo="allInfo" />
		<logger name="*" minlevel="Warn" maxlevel="Warn" writeTo="allWarn" />
		<!--<logger name="*" minlevel="Trace" maxlevel="Trace" writeTo="ownFile-flow" />
		<logger name="*" minlevel="Debug" maxlevel="Debug" writeTo="ownFile-workitem" />-->
		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<!-- BlackHole -->
	</rules>
</nlog>